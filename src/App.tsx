import React, { useState, useEffect } from 'react';
import './App.css';
import { WeatherData } from './types/weather';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–∞ - –ø—Ä–æ—Å—Ç–æ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
const AnimatedBackground: React.FC = () => {
  return (
    <div className="animated-background">
      {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–µ –∫—Ä—É–≥–∏ - —Å–æ–∑–¥–∞—é—Ç –≥–ª—É–±–∏–Ω—É */}
      <div className="gradient-circle circle-1"></div>
      <div className="gradient-circle circle-2"></div>
      <div className="gradient-circle circle-3"></div>
      <div className="gradient-circle circle-4"></div>
      
      {/* –û–±–ª–∞–∫–∞ - –ø–ª–∞–≤–∞—é—Ç –ø–æ —ç–∫—Ä–∞–Ω—É */}
      <div className="cloud cloud-1"></div>
      <div className="cloud cloud-2"></div>
      <div className="cloud cloud-3"></div>
      <div className="cloud cloud-4"></div>
      
      {/* –ß–∞—Å—Ç–∏—Ü—ã - –º–µ–ª–∫–∏–µ —Ç–æ—á–∫–∏ –¥–ª—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã */}
      <div className="particle particle-1"></div>
      <div className="particle particle-2"></div>
      <div className="particle particle-3"></div>
      <div className="particle particle-4"></div>
      <div className="particle particle-5"></div>
      <div className="particle particle-6"></div>
      <div className="particle particle-7"></div>
      <div className="particle particle-8"></div>
      
      {/* –í–æ–ª–Ω—ã –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ */}
      <div className="wave wave-1"></div>
      <div className="wave wave-2"></div>
      <div className="wave wave-3"></div>
      
      {/* –°–≤–µ—Ç–æ–≤—ã–µ –ª—É—á–∏ —Å–≤–µ—Ä—Ö—É */}
      <div className="light-ray ray-1"></div>
      <div className="light-ray ray-2"></div>
      <div className="light-ray ray-3"></div>
      
      {/* –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∏–≥—É—Ä—ã - –∫—Ä—É—Ç—è—Ç—Å—è */}
      <div className="geometric-shape shape-1"></div>
      <div className="geometric-shape shape-2"></div>
      <div className="geometric-shape shape-3"></div>
      <div className="geometric-shape shape-4"></div>
    </div>
  );
};

const App: React.FC = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const [city, setCity] = useState<string>('');
  const [weather, setWeather] = useState<WeatherData | null>(null);
  const [loading, setLoading] = useState<boolean>(false);
  const [error, setError] = useState<string>('');
  const [theme, setTheme] = useState<'light' | 'dark'>('light');

  // API –∫–ª—é—á –æ—Ç OpenWeatherMap
  const API_KEY: string = process.env.REACT_APP_OPENWEATHER_API_KEY || '';

  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–º—É (—Å–≤–µ—Ç–ª–∞—è/—Ç–µ–º–Ω–∞—è)
  const toggleTheme = (): void => {
    setTheme(theme === 'light' ? 'dark' : 'light');
  };

  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –∫ body —ç–ª–µ–º–µ–Ω—Ç—É
  useEffect(() => {
    document.body.className = `theme-${theme}`;
  }, [theme]);

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–≥–æ–¥—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≥–æ—Ä–æ–¥–∞
  const getWeather = async (cityName: string): Promise<void> => {
    if (!cityName.trim()) return;
    
    if (!API_KEY) {
      setError('API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env');
      return;
    }
    
    setLoading(true);
    setError('');
    
    try {
      const response = await fetch(
        `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric&lang=ru`
      );
      
      if (!response.ok) {
        throw new Error('–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      const data: WeatherData = await response.json();
      setWeather(data);
    } catch (err) {
      setError(err instanceof Error ? err.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
      setWeather(null);
    } finally {
      setLoading(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {
    e.preventDefault();
    getWeather(city);
  };

  // –ü–æ–ª—É—á–∞–µ–º URL –∏–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥—ã –æ—Ç OpenWeatherMap
  const getWeatherIcon = (iconCode: string): string => {
    return `https://openweathermap.org/img/wn/${iconCode}@2x.png`;
  };

  // –ü–µ—Ä–µ–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ —Ä—É—Å—Å–∫–∏–π
  const getWeatherDescription = (description: string): string => {
    const descriptions: Record<string, string> = {
      'clear sky': '—è—Å–Ω–æ',
      'few clouds': '–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ',
      'scattered clouds': '—Ä–∞—Å—Å–µ—è–Ω–Ω—ã–µ –æ–±–ª–∞–∫–∞',
      'broken clouds': '–æ–±–ª–∞—á–Ω–æ',
      'shower rain': '–ª–∏–≤–µ–Ω—å',
      'rain': '–¥–æ–∂–¥—å',
      'thunderstorm': '–≥—Ä–æ–∑–∞',
      'snow': '—Å–Ω–µ–≥',
      'mist': '—Ç—É–º–∞–Ω'
    };
    return descriptions[description] || description;
  };

  // –í—ã–±–∏—Ä–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
  const getTemperatureGradient = (temp: number): string => {
    if (temp < 0) return 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
    if (temp < 15) return 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)';
    if (temp < 25) return 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)';
    return 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)';
  };

  return (
    <div className={`App theme-${theme}`}>
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
      <AnimatedBackground />
      
      {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã */}
      <div className="theme-toggle">
        <button onClick={toggleTheme} className="theme-btn">
          {theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}
        </button>
      </div>

      <div className="weather-container">
        <h1 className="app-title">
          –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã
        </h1>
        
        {/* –§–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–∞ */}
        <form onSubmit={handleSubmit} className="search-form">
          <div className="input-wrapper">
            <input
              type="text"
              value={city}
              onChange={(e) => setCity(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞..."
              className="city-input"
            />
            <div className="input-focus-border"></div>
          </div>
          <button type="submit" className="search-btn" disabled={loading}>
            <span className="btn-content">
              {loading ? (
                <>
                  <div className="spinner"></div>
                  <span>–ü–æ–∏—Å–∫...</span>
                </>
              ) : (
                <>
                  <span className="search-icon">üîç</span>
                  <span>–ù–∞–π—Ç–∏</span>
                </>
              )}
            </span>
          </button>
        </form>

        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å */}
        {error && (
          <div className="error-message">
            <span className="error-icon">‚ö†Ô∏è</span>
            {error}
          </div>
        )}

        {/* –°–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {loading && (
          <div className="loading-container">
            <div className="loading-spinner"></div>
            <div className="loading-text">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
          </div>
        )}

        {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ */}
        {weather && !loading && (
          <div className="weather-info">
            <div className="city-name">
              <span className="location-icon">üìç</span>
              {weather.name}, {weather.sys.country}
            </div>
            
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: –∏–∫–æ–Ω–∫–∞ –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ */}
            <div 
              className="weather-main"
              style={{ background: getTemperatureGradient(weather.main.temp) }}
            >
              <div className="weather-icon-container">
                <img 
                  src={getWeatherIcon(weather.weather[0].icon)} 
                  alt="–ü–æ–≥–æ–¥–∞" 
                  className="weather-icon"
                />
              </div>
              <div className="temperature-container">
                <div className="temperature">{Math.round(weather.main.temp)}¬∞</div>
                <div className="temperature-unit">C</div>
              </div>
            </div>
            
            {/* –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã */}
            <div className="weather-description">
              {getWeatherDescription(weather.weather[0].description)}
            </div>
            
            {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="weather-details">
              <div className="detail-item">
                <div className="detail-icon">üå°Ô∏è</div>
                <div className="detail-content">
                  <span className="detail-label">–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫</span>
                  <span className="detail-value">{Math.round(weather.main.feels_like)}¬∞C</span>
                </div>
              </div>
              <div className="detail-item">
                <div className="detail-icon">üíß</div>
                <div className="detail-content">
                  <span className="detail-label">–í–ª–∞–∂–Ω–æ—Å—Ç—å</span>
                  <span className="detail-value">{weather.main.humidity}%</span>
                </div>
              </div>
              <div className="detail-item">
                <div className="detail-icon">üí®</div>
                <div className="detail-content">
                  <span className="detail-label">–í–µ—Ç–µ—Ä</span>
                  <span className="detail-value">{Math.round(weather.wind.speed)} –º/—Å</span>
                </div>
              </div>
              <div className="detail-item">
                <div className="detail-icon">üìä</div>
                <div className="detail-content">
                  <span className="detail-label">–î–∞–≤–ª–µ–Ω–∏–µ</span>
                  <span className="detail-value">{Math.round(weather.main.pressure * 0.750062)} –º–º —Ä—Ç.—Å—Ç.</span>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}

export default App; 